#+TITLE: Compare mooring & χ-pod sensors
#+AUTHOR: Deepak Cherian
#+DATE: 14 Mar 2017

#+LATEX_CLASS: dcnotebook

#+HTML_HEAD: <link rel="stylesheet" href="notebook.css" type="text/css" />

* Instrument depths
|--------+----------+--------|
| ADCP   | 10m only | 30 min |
| χ-pods | 15m, 30m |        |
| CTDs   |          |        |
|--------+----------+--------|
* Generic
#+BEGIN_SRC ipython :session :exports results
    %matplotlib inline
    import numpy as np
    import matplotlib as mpl
    import matplotlib.pyplot as plt
    import datetime as dt
    import h5py

    import sys
    sys.path.append('/home/deepak/python')
    import dcpy.plots
    import dcpy.util
    import importlib
    dcpy = importlib.reload(dcpy)

    mpl.rcParams['savefig.transparent'] = True
    mpl.rcParams['figure.figsize'] = [6.5, 6.5]
    mpl.rcParams['figure.dpi'] = 180
    mpl.rcParams['axes.facecolor'] = 'None'

    chitemp = h5py.File('../RAMA13/data/526/proc/temp.mat')
    Tchi = chitemp['T'];

    import chipy.chipy
    import dcpy.util
    import numpy as np

    # del c526
    c526 = chipy.chipy.chipod('../RAMA13/data/', '526')
    c526.LoadChiEstimates()
    c526.CalcKT()

    # Tctd1 = moorfile['T1']; Tctd2 = moorfile['T2'];
    # Tctd1.time = dcpy.util.datenum2datetime(Tctd1.time)
    # Tctd2.time = dcpy.util.datenum2datetime(Tctd2.time)
#+END_SRC

#+RESULTS:

* Temperature
** χ-pod 526 T_1 vs. T_2
#+BEGIN_SRC ipython :session :exports results
  chirange = range(0, len(Tchi['time'])-582*1000, 50)

  T1 = np.zeros((Tchi['T1'].size, 1), dtype='float64')
  T2 = np.zeros((Tchi['T1'].size, 1), dtype='float64')
  time = np.zeros((Tchi['time'].size, 1), dtype='float64')
  Tchi['T1'].read_direct(T1)
  Tchi['T2'].read_direct(T2)
  Tchi['time'].read_direct(time)

  T1 = T1[chirange]
  T2 = T2[chirange]
  time = dcpy.util.datenum2datetime(time[chirange])
#+END_SRC

#+RESULTS:

#+BEGIN_SRC ipython :session :exports results :file images/526-T1-T2.png
  plt.subplot(3,1,1)
  plt.hold(True)
  plt.plot_date(time, T2, '-', label='T₂')
  plt.plot_date(time, T1, '-', label='T₁')
  plt.legend()

  plt.subplot(3,1,2)
  plt.plot_date(time, T2-T1, '-')
  plt.title('T₂ - T₁')

  plt.subplot(3,1,3)
  plt.hexbin(T1, T2, cmap=plt.cm.YlOrRd)
  plt.xlabel('χ-pod T₁')
  plt.ylabel('χ-pod T₂')
  dcpy.plots.line45()
  plt.xlim([27, 31]); plt.ylim([27, 31])

  plt.tight_layout()
#+END_SRC

#+RESULTS:
[[file:images/526-T1-T2.png]]

** χ-pod 526 vs. CTD
#+BEGIN_SRC ipython :session :exports results :file images/chipod-T-CTD-T.png
  chirange = range(0, len(Tchi.time)-582*1000,30)

  plt.figure()
  plt.subplot2grid((3,2), (0,0), colspan=2)
  plt.hold(True)
  plt.plot_date(Tctd1.time, Tctd1.T, '-');
  plt.plot_date(Tctd2.time, Tctd2.T, '-');
  plt.plot_date(Tchi.time[chirange], Tchi.T1[chirange], '-');
  plt.plot_date(Tchi.time[chirange], Tchi.T2[chirange], '-');
  plt.legend(["CTD {0:.0f} m".format(Tctd1.z),
	      "CTD {0:.0f} m".format(Tctd2.z),
	      "χ-pod 15 m T₁", "χ-pod 15m T₂"])
  plt.ylabel('Temperature (C)')

  plt.subplot2grid((3,2), (1,0), colspan=2)
  plt.hold(True)
  plt.plot_date(Tchi.time[chirange], Tchi.T1[chirange], '-');
  plt.plot_date(Tchi.time[chirange], Tchi.T2[chirange], '-');
  plt.legend(["χ-pod 15 m T₁", "χ-pod 15m T₂"])
  plt.ylabel('Temperature (C)')

  plt.subplot2grid((3,2),(2,0))
  plt.plot(Tctd1.T, Tctd2.T, '.')
  plt.xlabel('CTD T at 10m');
  plt.ylabel('CTD T at 20m');
  dcpy.plots.line45()

  plt.subplot2grid((3,2),(2,1))
  T12 = (Tctd1.T + Tctd2.T)/2
  Tchi12 = np.interp(mpl.dates.date2num(Tctd1.time),
		     mpl.dates.date2num(Tchi.time[chirange]),
		     (Tchi.T1[chirange] + Tchi.T2[chirange])/2)
  plt.plot(T12, Tchi12, '.')
  plt.xlabel('CTD (10m + 20m)/2')
  plt.ylabel('χ-pod (T₁ + T₂)/2')
  dcpy.plots.line45()
  plt.grid()
  plt.tight_layout()
#+END_SRC
#+RESULTS:
[[file:images/chipod-T-CTD-T.png]]
** χ-pod 526 (15m) vs. 527 (30m)
* Pitots : 526 (15m) vs. 527 (30m)
#+BEGIN_SRC ipython :session :exports results :file images/RAMA13-526-527-pitot-compare.png
  def LoadPitot(unit):

      import numpy as np
      dirname = '../RAMA13/data/' + unit + '/proc/Praw.mat'
      pitot = hs.loadmat(dirname,
			 squeeze_me=True, struct_as_record=False)
      pitot = pitot['Praw']
      w = pitot['W'][0, 0]
      pitot['W'][0, 0][w > 1] = np.nan
      pitot['W'][0, 0][w < 0.4] = np.nan
      return pitot

  def PlotPitotRawVoltage(pitot, hax=None):
      import matplotlib.pyplot as plt
      import hdf5storage as hs
      import dcpy.util

      if hax is None:
          hax = plt.gca()

      pitotrange = range(0, len(pitot['time'][0, 0]) - 25000, 100)

      hax.hold(True)
      hax.plot_date(dcpy.util.datenum2datetime(
          pitot['time'][0, 0][pitotrange]), pitot['W'][0, 0][pitotrange], '-')
      hax.set_ylabel('Raw Pitot voltage (V)')

  p526 = LoadPitot('526')
  p527 = LoadPitot('527')
  PlotPitotRawVoltage(p526)
  PlotPitotRawVoltage(p527)
  plt.legend(['526 (15 m)', '527 (30 m)'])
  plt.title('RAMA13 pitot raw voltages')

  # import scipy.signal as signal
  # b, a = signal.butter(1, (1/(40*24*60))/(1/20), 'high')
  # w = p526['W'][0,0]

  # plt.plot(dcpy.util.datenum2datetime(p526['time'][0,0][~np.isnan(w)]),
  #          signal.filtfilt(b, a, w[~np.isnan(w)])
  #          + np.nanmean(p527['W'][0,0]), zorder=0)
#+END_SRC

#+RESULTS:
[[file:images/RAMA13-526-527-pitot-compare.png]]

